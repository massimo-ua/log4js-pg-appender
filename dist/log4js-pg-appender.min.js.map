{
  "version": 3,
  "sources": ["../lib/db.js", "../lib/writer.js", "../lib/appender.js", "../lib/index.js", "../index.js"],
  "sourcesContent": ["const {Client} = require ('pg');\n\nlet db;\nmodule.exports = {\n  connect (options) {\n    if (db) {\n      return db;\n    }\n    db = new Client (options);\n    db.connect ();\n    return db;\n  },\n  disconnect () {\n    if (db) {\n      db.end();\n      db = null;\n    }\n  },\n};\n", "module.exports = (client, tableName = 'Logs') => {\n  const query = {\n    name: 'log4js-pg-appender-add-record',\n    text: `INSERT INTO \"${ tableName }\" (\"startTime\", \"categoryName\", \"data\", \"level\", \"context\") VALUES($1, $2, $3, $4, $5)`,\n  };\n  return (...values) => client.query({ ...query, values});\n};", "const db = require ('./db');\nconst writerFactory = require ('./writer');\n\nfunction validateConfig(config) {\n  if (!config) {throw new Error('config is required');}\n  if (!config.host) {throw new Error('host is required');}\n  if (!config.database) {throw new Error('database is required');}\n  if (!config.user) {throw new Error('user is required');}\n  if (!config.password) {throw new Error('password is required');}\n  if (!config.tableName) {throw new Error('tableName is required');}\n}\n\nfunction createPgAppender (config) {\n  validateConfig(config);\n  const client = db.connect (config);\n  const writer = writerFactory (client, config.tableName);\n  return loggingEvent => {\n    const {startTime, categoryName, data, level, context} = loggingEvent;\n    writer (\n      startTime,\n      categoryName,\n      JSON.stringify (data),\n      level.levelStr,\n      context ? JSON.stringify (context) : null\n    ).catch (error => {\n       \n      console.error (error.stack);\n    });\n  };\n}\n\nmodule.exports.configure = config => createPgAppender (config);\n", "module.exports = require('./appender');", "module.exports = require('./lib');"],
  "mappings": ";;;;;;8DAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,IAAM,CAAC,OAAAC,CAAM,EAAI,QAAS,IAAI,EAE1BC,EACJF,EAAO,QAAU,CACf,QAASG,EAAS,CAChB,OAAID,IAGJA,EAAK,IAAID,EAAQE,CAAO,EACxBD,EAAG,QAAS,EACLA,EACT,EACA,YAAc,CACRA,IACFA,EAAG,IAAI,EACPA,EAAK,KAET,CACF,IClBA,IAAAE,EAAAC,EAAA,CAAAC,EAAAC,IAAA,CAAAA,EAAO,QAAU,CAACC,EAAQC,EAAY,SAAW,CAC/C,IAAMC,EAAQ,CACZ,KAAM,gCACN,KAAM,gBAAiBD,CAAU,wFACnC,EACA,MAAO,IAAIE,IAAWH,EAAO,MAAM,CAAE,GAAGE,EAAO,OAAAC,CAAM,CAAC,CACxD,ICNA,IAAAC,EAAAC,EAAA,CAAAC,EAAAC,IAAA,KAAMC,EAAK,IACLC,EAAgB,IAEtB,SAASC,EAAeC,EAAQ,CAC9B,GAAI,CAACA,EAAS,MAAM,IAAI,MAAM,oBAAoB,EAClD,GAAI,CAACA,EAAO,KAAO,MAAM,IAAI,MAAM,kBAAkB,EACrD,GAAI,CAACA,EAAO,SAAW,MAAM,IAAI,MAAM,sBAAsB,EAC7D,GAAI,CAACA,EAAO,KAAO,MAAM,IAAI,MAAM,kBAAkB,EACrD,GAAI,CAACA,EAAO,SAAW,MAAM,IAAI,MAAM,sBAAsB,EAC7D,GAAI,CAACA,EAAO,UAAY,MAAM,IAAI,MAAM,uBAAuB,CACjE,CAEA,SAASC,EAAkBD,EAAQ,CACjCD,EAAeC,CAAM,EACrB,IAAME,EAASL,EAAG,QAASG,CAAM,EAC3BG,EAASL,EAAeI,EAAQF,EAAO,SAAS,EACtD,OAAOI,GAAgB,CACrB,GAAM,CAAC,UAAAC,EAAW,aAAAC,EAAc,KAAAC,EAAM,MAAAC,EAAO,QAAAC,CAAO,EAAIL,EACxDD,EACEE,EACAC,EACA,KAAK,UAAWC,CAAI,EACpBC,EAAM,SACNC,EAAU,KAAK,UAAWA,CAAO,EAAI,IACvC,EAAE,MAAOC,GAAS,CAEhB,QAAQ,MAAOA,EAAM,KAAK,CAC5B,CAAC,CACH,CACF,CAEAd,EAAO,QAAQ,UAAYI,GAAUC,EAAkBD,CAAM,IC/B7D,IAAAW,EAAAC,EAAA,CAAAC,EAAAC,IAAA,CAAAA,EAAO,QAAU,MCAjB,OAAO,QAAU",
  "names": ["require_db", "__commonJSMin", "exports", "module", "Client", "db", "options", "require_writer", "__commonJSMin", "exports", "module", "client", "tableName", "query", "values", "require_appender", "__commonJSMin", "exports", "module", "db", "writerFactory", "validateConfig", "config", "createPgAppender", "client", "writer", "loggingEvent", "startTime", "categoryName", "data", "level", "context", "error", "require_lib", "__commonJSMin", "exports", "module"]
}
